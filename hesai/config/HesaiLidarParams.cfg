#!/usr/bin/env python

PACKAGE = "hesai_lidar_driver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Driver parameters
driver_group = gen.add_group("Driver")
driver_group.add("scan_time", double_t, 0, "Time for one complete scan", 0.1, 0.05, 0.5)

# Processing parameters
processing_group = gen.add_group("Processing")
processing_group.add("voxel_leaf_size", double_t, 0, "Voxel grid leaf size", 0.05, 0.01, 0.2)
processing_group.add("sor_mean_k", int_t, 0, "Statistical outlier removal mean K", 50, 10, 100)
processing_group.add("sor_std_dev_threshold", double_t, 0, "SOR std dev threshold", 1.0, 0.1, 3.0)

# Region of Interest
roi_group = gen.add_group("ROI")
roi_group.add("min_x", double_t, 0, "Minimum X boundary", -50.0, -100.0, 0.0)
roi_group.add("max_x", double_t, 0, "Maximum X boundary", 50.0, 0.0, 100.0)
roi_group.add("min_y", double_t, 0, "Minimum Y boundary", -50.0, -100.0, 0.0)
roi_group.add("max_y", double_t, 0, "Maximum Y boundary", 50.0, 0.0, 100.0)
roi_group.add("min_z", double_t, 0, "Minimum Z boundary", -2.0, -5.0, 0.0)
roi_group.add("max_z", double_t, 0, "Maximum Z boundary", 5.0, 0.0, 10.0)

# Ground removal
ground_group = gen.add_group("Ground")
ground_group.add("enable_ground_removal", bool_t, 0, "Enable ground point removal", True)
ground_group.add("ground_height_threshold", double_t, 0, "Ground height threshold", -1.5, -3.0, 0.0)

# Intensity filtering
intensity_group = gen.add_group("Intensity")
intensity_group.add("enable_intensity_filter", bool_t, 0, "Enable intensity filtering", True)
intensity_group.add("min_intensity", double_t, 0, "Minimum intensity threshold", 10.0, 0.0, 255.0)

# Cone detection parameters
cone_group = gen.add_group("ConeDetection")
cone_group.add("cluster_tolerance", double_t, 0, "Clustering tolerance", 0.3, 0.1, 1.0)
cone_group.add("min_cluster_size", int_t, 0, "Minimum cluster size", 10, 5, 100)
cone_group.add("max_cluster_size", int_t, 0, "Maximum cluster size", 500, 50, 2000)

# Cone geometry
geometry_group = gen.add_group("ConeGeometry")
geometry_group.add("min_cone_height", double_t, 0, "Minimum cone height", 0.2, 0.1, 0.5)
geometry_group.add("max_cone_height", double_t, 0, "Maximum cone height", 0.6, 0.3, 1.0)
geometry_group.add("min_cone_radius", double_t, 0, "Minimum cone radius", 0.05, 0.02, 0.1)
geometry_group.add("max_cone_radius", double_t, 0, "Maximum cone radius", 0.25, 0.1, 0.5)

# Detection thresholds
detection_group = gen.add_group("Detection")
detection_group.add("min_detection_confidence", double_t, 0, "Minimum detection confidence", 0.5, 0.0, 1.0)
detection_group.add("max_detection_distance", double_t, 0, "Maximum detection distance", 30.0, 5.0, 100.0)

exit(gen.generate(PACKAGE, "hesai_lidar_driver", "HesaiLidarParams"))
